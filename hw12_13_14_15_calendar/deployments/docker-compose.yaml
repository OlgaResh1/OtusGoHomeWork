
services:
  postgres:
    image: postgres
    restart: on-failure      
    hostname: postgresdb     
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s      
    networks:
      - calendar      

  rabbit:
    image: rabbitmq   
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
      RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_DEFAULT_VHOST} 
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 30s
      retries: 3
    hostname: rabbitmq      
    restart: on-failure
    networks:
      - calendar   

  calendar:
    build:     
      context: ../
      dockerfile: build/calendar/Dockerfile
    depends_on:
      - postgres
    hostname: calendar      
    restart: on-failure
    ports:
      - "${LOCALHOST_HTTP_PORT}:${CALENDAR_HTTP_PORT}"
      - "${LOCALHOST_GRPC_PORT}:${CALENDAR_GRPC_PORT}"
    networks:
      - calendar   

  scheduler:
    build:       
      context: ../
      dockerfile: build/scheduler/Dockerfile
    depends_on:
      rabbit:
        condition: service_healthy
    restart: on-failure
    networks:
      - calendar   

  sender:
    build:       
      context: ../
      dockerfile: build/sender/Dockerfile
    depends_on:
      rabbit:
        condition: service_healthy
    restart: on-failure
    networks:
      - calendar   

networks:
  calendar:
    driver: bridge